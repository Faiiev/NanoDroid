#!/bin/bash

create_microg_package() {
	[[ ! -f "${CWD}/.nanodroid-pull" ]] && \
		error "run \"build-package pull\" first!"

	ZIP="${CWD}/NanoDroid-microG-${VERSION}".zip
	rm -f "${ZIP}"

	print_package "microG"

	cd "${CWD}/Full"

	zip_add "nanodroid-functions"

	for app in nlpBackendDejavu nlpBackendIchnaea nlpBackendNominatim; do
		zip_add "system/app/${app}/"
	done

	for app in DroidGuard FakeStore GmsCore GsfProxy Phonesky YalpStore; do
		zip_add "system/priv-app/${app}/"
	done

	for input in "system/bin/nanodroid-overlay" "system/bin/novl" \
		"system/bin/bash*" "system/bin/aapt*" "system/bin/column*" \
		"system/bin/unzip*" "system/bin/less*" "system/framework/" \
		"gsync/" "system/etc/permissions/" "system/etc/sysconfig/" \
		"system/etc/default-permissions/" "system/etc/bash*" "swipe/"; do
		zip_add "${input}"
	done

	cd "${CWD}"

	cd "${CWD}/microG"
	zip_add
	cd "${CWD}"

	zip_add_doc
	zip_add_config .nanodroid-overlay 0
	zip_add_config .nanodroid-setup 1
}

mk_pkg_microg () {
	create_microg_package &
	progress $!
}
